package edu.iful.oop;

public class Matrix {
    private double[][] matrix;
    private int row;
    private int col;

    public Matrix(int m, int n) {
        super();
        row = m;
        col = n;
        matrix = new double[m][n];
        MatrixRandomFill();
    }

    //Не розумію для чого ви створили були оцей конструктор
    public Matrix(double[][] matrix) {
        super();
        row = matrix.length;
        col = matrix[0].length;
        this.matrix = matrix;
    }

    //Друк матриці
    public void print() {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();
    }

    //Заповнення матриці
    public void MatrixRandomFill() {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                matrix[i][j] = (int) (Math.random() * 5);
            }
        }
    }

    //Транспортування матриць
    public void transposition() {
        double[][] result = new double[col][row];
        for (int i = 0; i < matrix.length; i++)
            for (int j = 0; j < matrix[0].length; j++) {
                result[i][j] = matrix[j][i];
            }
        matrix = result;
    }

    //Множення матриць
    public void multiplication(Matrix other) {
        if (matrix.length != other.matrix.length) {
            System.out.println("Довжини матриць нерівні!");
        } else {
            double[][] result = new double[matrix.length][other.matrix[0].length];
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < other.matrix[0].length; j++) {
                    for (int k = 0; k < other.matrix.length; k++) {
                        result[i][j] += matrix[i][k] * other.matrix[k][j];
                    }
                }
            }
            matrix = result;
        }
    }

    //Складання матриць
    public void drafting(Matrix other) {
        if(matrix.length!=other.matrix.length){
            System.out.println("Довжини матриць нерівні!");
        }
        else {
            double[][] result = new double[matrix.length][matrix[0].length];
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix[0].length; j++) {
                    result[i][j] = matrix[i][j] + other.matrix[i][j];
                }
            }
            matrix = result;
        }
    }

    //Віднімання матриць
    public void substraction(Matrix other) {
        if(matrix.length!=other.matrix.length){
            System.out.println("Довжини матриць нерівні!");
        }
        else {
            double[][] result = new double[matrix.length][matrix[0].length];
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix[0].length; j++) {
                    result[i][j] = matrix[i][j] - other.matrix[i][j];
                }
            }
            matrix = result;
        }
    }

    //Множення матриці на вектор
    public void matrixToVector(Vector vector) {
        double[] result = new double[row];
        double res = 0;

        if (matrix[0].length != vector.getVector().length) {
            System.out.println("Дожвина вектора та кількість стовбців матриці не рівні!");
        } else {
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < vector.getVector().length; j++) {
                    res += matrix[i][j] * vector.getVector()[j];
                }
                result[i] = res;
                res = 0;
            }
            vector.setVector(result);
        }
    }
}

